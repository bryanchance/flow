syntax = "proto3";

package flow.services.accounts.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import weak "google/protobuf/empty.proto";

option go_package = "github.com/ehazlett/flow/api/services/accounts/v1;accounts";

option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;

service Accounts {
        rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);
        rpc CreateAccount(CreateAccountRequest) returns (google.protobuf.Empty);
        rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
        rpc UpdateAccount(UpdateAccountRequest) returns (google.protobuf.Empty);
        rpc GenerateAPIToken(GenerateAPITokenRequest) returns (GenerateAPITokenResponse);
        rpc ChangePassword(ChangePasswordRequest) returns (google.protobuf.Empty);
        rpc DeleteAccount(DeleteAccountRequest) returns (google.protobuf.Empty);
        rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse);
        rpc Logout(LogoutRequest) returns (google.protobuf.Empty);
        rpc GetAccountProfile(GetAccountProfileRequest) returns (GetAccountProfileResponse);
        rpc GenerateServiceToken(GenerateServiceTokenRequest) returns (GenerateServiceTokenResponse);
        rpc ListServiceTokens(ListServiceTokensRequest) returns (ListServiceTokensResponse);
        rpc ListNamespaces(ListNamespacesRequest) returns (ListNamespacesResponse);
	rpc CreateNamespace(CreateNamespaceRequest) returns (CreateNamespaceResponse);
        rpc GetNamespace(GetNamespaceRequest) returns (GetNamespaceResponse);
        rpc Authenticated(AuthenticatedRequest) returns (google.protobuf.Empty);
}

message AuthenticatedRequest {}

message Account {
        string id = 1 [(gogoproto.customname) = "ID"];
        google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
        bool admin = 3;
        string username = 4;
        string first_name = 5;
        string last_name = 6;
        string email = 7;
        // password is only used in account creation and password resets
        // and is hashed with bcrypt and then cleared and never stored
        string password = 8;
        bytes password_crypt = 9 [(gogoproto.jsontag) = "-"];
        string current_namespace = 10;
	repeated string namespaces = 11;
}

message APIToken {
        string id = 1 [(gogoproto.customname) = "ID"];
        string token = 2;
        string description = 3;
        google.protobuf.Timestamp created_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message GenerateAPITokenRequest {
        string description = 1;
}

message GenerateAPITokenResponse {
        APIToken api_token = 1 [(gogoproto.customname) = "APIToken"];
}

message ListAccountsRequest {}

message ListAccountsResponse {}

message CreateAccountRequest {
        Account account = 1;
}

message GetAccountRequest {
        string username = 1;
}

message GetAccountResponse {
        Account account = 2;
}

message UpdateAccountRequest {
        Account account = 1;
}

message DeleteAccountRequest {
        string id = 1 [(gogoproto.customname) = "ID"];
}

message AuthenticateRequest {
        string username = 1;
        bytes password = 2;
}

message AuthenticateResponse {
        Account account = 1;
        bytes config = 2;
}

message LogoutRequest {}

message ChangePasswordRequest {
        string username = 1;
        bytes password = 2;
}

message GetAccountProfileRequest {}

message GetAccountProfileResponse {
        Account account = 1;
}

message ServiceToken {
        string token = 1;
        string description = 2;
        google.protobuf.Timestamp created_at = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
        google.protobuf.Timestamp accessed_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message GenerateServiceTokenRequest {
        string description = 1;
        google.protobuf.Duration ttl = 2 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false, (gogoproto.customname) = "TTL"];
}

message GenerateServiceTokenResponse {
        ServiceToken service_token = 1;
}

message ListServiceTokensRequest {}

message ListServiceTokensResponse {
        repeated ServiceToken service_tokens = 1;
}

message CreateNamespaceRequest {
	Namespace namespace = 1;
}

message CreateNamespaceResponse {
        string id = 1 [(gogoproto.customname) = "ID"];
}

message ListNamespacesRequest {}

message Namespace {
        string id = 1 [(gogoproto.customname) = "ID"];
        google.protobuf.Timestamp created_at = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	string name = 3;
	string description = 4;
	string owner_id = 5 [(gogoproto.customname) = "OwnerID"];
	repeated string members = 6;
}

message ListNamespacesResponse {
	repeated Namespace namespaces = 1;
}

message GetNamespaceRequest {
        string id = 1 [(gogoproto.customname) = "ID"];
}

message GetNamespaceResponse {
        Namespace namespace = 1;
}

